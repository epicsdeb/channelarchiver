#!/bin/sh

### BEGIN INIT INFO
# Provides:          channelarchiver
# Required-Start:    $remote_fs $local_fs $network $syslog $time
# Required-Stop:     $remote_fs $local_fs $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: EPICS Channel Archiver
# Description:       EPICS PV Archiver service
### END INIT INFO

. /lib/lsb/init-functions

CONF=/etc/channelarchiver/daemon.conf

LOG=/var/log/archserver.log

SCRIPTS=/usr/share/channelarchiver

EXEC=/usr/bin/ArchiveDaemon
NAME=`basename $EXEC`

USER=channelarchiver

WWWUSER=www-data

. $CONF

PID=/var/run/channelarchiver.pid

check_status() {
  if [ "$1" = "-q" ];then
    status_of_proc -p "$PID" "$NAME" "$NAME" &>/dev/null
  else
    status_of_proc -p "$PID" "$NAME" "$NAME"
  fi
  return $?
}

case "$1" in

start)
    log_daemon_msg "Starting Channel Archiver Daemon" "channelarchiver"

    [ -d "$BASE_DIR" ] || install -d "$BASE_DIR"
    [ -d "$BASE_DIR" ] || die "Failed to create $BASE_DIR"
    chown $USER "$BASE_DIR" || die "Failed to give $BASE_DIR to $USER"

    $SCRIPTS/gendaemon.sh "$BASE_DIR/daemon.xml" || die "Failed to generate daemon config"

    touch $PID || die "Can't create $PID"
    chown $USER $PID || die "Failed to give $PID to $USER"
    touch $LOG || die "Can't create $LOG"
    chown $WWWUSER $LOG || die "Failed to give $LOG to $WWWUSER"

    start-stop-daemon --start --pidfile $PID \
        --chdir "$BASE_DIR" --startas $EXEC --name $NAME \
        --chuid $USER \
        -- -p $PID -f "$BASE_DIR/daemon.xml"

    sleep 2

    if check_status -q; then
        log_end_msg 0
    else
        log_failure_msg
        log_end_msg 1
        exit 1
    fi

    ;;
stop)
    log_daemon_msg "Stopping Channel Archiver Daemon" "channelarchiver"

    start-stop-daemon --stop --quiet --pidfile $PID \
        --user $USER --name $NAME \
        --retry=TERM/30/KILL/5

    log_end_msg $?

    rm -f "$PID"
    ;;
status)
    echo -n "Status of softioc $IOC ($NAME) : "
    check_status
    exit $?
    ;;

restart)
    $0 stop
    [ $? -ne 0 ] && exit 0
    sleep 2
    $0 start
    exit $?
    ;;

*)
    die "Usage: $0 {start|stop|restart|status|info}"
    ;;
esac

exit 0
